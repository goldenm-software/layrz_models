// coverage:ignore-file
// GENERATED CODE - DO NOT MODIFY BY HAND
// ignore_for_file: type=lint
// ignore_for_file: unused_element, deprecated_member_use, deprecated_member_use_from_same_package, use_function_type_syntax_for_parameters, unnecessary_const, avoid_init_to_null, invalid_override_different_default_values_named, prefer_expression_function_bodies, annotate_overrides, invalid_annotation_target, unnecessary_question_mark

part of 'ble.dart';

// **************************************************************************
// FreezedGenerator
// **************************************************************************

T _$identity<T>(T value) => value;

final _privateConstructorUsedError = UnsupportedError(
    'It seems like you constructed your class using `MyClass._()`. This constructor is only meant to be used by freezed and you are not supposed to need it nor use it.\nPlease check the documentation here for more information: https://github.com/rrousselGit/freezed#adding-getters-and-methods-to-our-models');

BleDevice _$BleDeviceFromJson(Map<String, dynamic> json) {
  return _BleDevice.fromJson(json);
}

/// @nodoc
mixin _$BleDevice {
  /// [macAddress] is the MAC address of the BLE device.
  /// Be careful, on Apple ecosystem, the MAC address is not the real identifier, is a generated by the platform
  /// and is hidden from the developer.
  String get macAddress => throw _privateConstructorUsedError;

  /// [name] is the name of the BLE device.
  /// Can be null if the device does not have a name or is not broadcasted.
  String? get name => throw _privateConstructorUsedError;

  /// [rssi] is the signal strength of the BLE device.
  /// Can be null if the device does not have a signal strength due to a platform limitation.
  int? get rssi => throw _privateConstructorUsedError;

  /// [manufacturerData] is the manufacturer data of the BLE device.
  /// Can be null if the device does not have manufacturer data or is not broadcasted.
  List<int>? get manufacturerData => throw _privateConstructorUsedError;

  /// [serviceData] is the service data of the BLE device.
  /// Can be null if the device does not have service data or is not broadcasted.
  /// Also, this list will be ordered by the service UUID.
  List<BleServiceData>? get serviceData => throw _privateConstructorUsedError;

  /// Serializes this BleDevice to a JSON map.
  Map<String, dynamic> toJson() => throw _privateConstructorUsedError;

  /// Create a copy of BleDevice
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  $BleDeviceCopyWith<BleDevice> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $BleDeviceCopyWith<$Res> {
  factory $BleDeviceCopyWith(BleDevice value, $Res Function(BleDevice) then) =
      _$BleDeviceCopyWithImpl<$Res, BleDevice>;
  @useResult
  $Res call(
      {String macAddress,
      String? name,
      int? rssi,
      List<int>? manufacturerData,
      List<BleServiceData>? serviceData});
}

/// @nodoc
class _$BleDeviceCopyWithImpl<$Res, $Val extends BleDevice>
    implements $BleDeviceCopyWith<$Res> {
  _$BleDeviceCopyWithImpl(this._value, this._then);

  // ignore: unused_field
  final $Val _value;
  // ignore: unused_field
  final $Res Function($Val) _then;

  /// Create a copy of BleDevice
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? macAddress = null,
    Object? name = freezed,
    Object? rssi = freezed,
    Object? manufacturerData = freezed,
    Object? serviceData = freezed,
  }) {
    return _then(_value.copyWith(
      macAddress: null == macAddress
          ? _value.macAddress
          : macAddress // ignore: cast_nullable_to_non_nullable
              as String,
      name: freezed == name
          ? _value.name
          : name // ignore: cast_nullable_to_non_nullable
              as String?,
      rssi: freezed == rssi
          ? _value.rssi
          : rssi // ignore: cast_nullable_to_non_nullable
              as int?,
      manufacturerData: freezed == manufacturerData
          ? _value.manufacturerData
          : manufacturerData // ignore: cast_nullable_to_non_nullable
              as List<int>?,
      serviceData: freezed == serviceData
          ? _value.serviceData
          : serviceData // ignore: cast_nullable_to_non_nullable
              as List<BleServiceData>?,
    ) as $Val);
  }
}

/// @nodoc
abstract class _$$BleDeviceImplCopyWith<$Res>
    implements $BleDeviceCopyWith<$Res> {
  factory _$$BleDeviceImplCopyWith(
          _$BleDeviceImpl value, $Res Function(_$BleDeviceImpl) then) =
      __$$BleDeviceImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {String macAddress,
      String? name,
      int? rssi,
      List<int>? manufacturerData,
      List<BleServiceData>? serviceData});
}

/// @nodoc
class __$$BleDeviceImplCopyWithImpl<$Res>
    extends _$BleDeviceCopyWithImpl<$Res, _$BleDeviceImpl>
    implements _$$BleDeviceImplCopyWith<$Res> {
  __$$BleDeviceImplCopyWithImpl(
      _$BleDeviceImpl _value, $Res Function(_$BleDeviceImpl) _then)
      : super(_value, _then);

  /// Create a copy of BleDevice
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? macAddress = null,
    Object? name = freezed,
    Object? rssi = freezed,
    Object? manufacturerData = freezed,
    Object? serviceData = freezed,
  }) {
    return _then(_$BleDeviceImpl(
      macAddress: null == macAddress
          ? _value.macAddress
          : macAddress // ignore: cast_nullable_to_non_nullable
              as String,
      name: freezed == name
          ? _value.name
          : name // ignore: cast_nullable_to_non_nullable
              as String?,
      rssi: freezed == rssi
          ? _value.rssi
          : rssi // ignore: cast_nullable_to_non_nullable
              as int?,
      manufacturerData: freezed == manufacturerData
          ? _value._manufacturerData
          : manufacturerData // ignore: cast_nullable_to_non_nullable
              as List<int>?,
      serviceData: freezed == serviceData
          ? _value._serviceData
          : serviceData // ignore: cast_nullable_to_non_nullable
              as List<BleServiceData>?,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$BleDeviceImpl extends _BleDevice {
  const _$BleDeviceImpl(
      {required this.macAddress,
      this.name,
      this.rssi,
      final List<int>? manufacturerData,
      final List<BleServiceData>? serviceData})
      : _manufacturerData = manufacturerData,
        _serviceData = serviceData,
        super._();

  factory _$BleDeviceImpl.fromJson(Map<String, dynamic> json) =>
      _$$BleDeviceImplFromJson(json);

  /// [macAddress] is the MAC address of the BLE device.
  /// Be careful, on Apple ecosystem, the MAC address is not the real identifier, is a generated by the platform
  /// and is hidden from the developer.
  @override
  final String macAddress;

  /// [name] is the name of the BLE device.
  /// Can be null if the device does not have a name or is not broadcasted.
  @override
  final String? name;

  /// [rssi] is the signal strength of the BLE device.
  /// Can be null if the device does not have a signal strength due to a platform limitation.
  @override
  final int? rssi;

  /// [manufacturerData] is the manufacturer data of the BLE device.
  /// Can be null if the device does not have manufacturer data or is not broadcasted.
  final List<int>? _manufacturerData;

  /// [manufacturerData] is the manufacturer data of the BLE device.
  /// Can be null if the device does not have manufacturer data or is not broadcasted.
  @override
  List<int>? get manufacturerData {
    final value = _manufacturerData;
    if (value == null) return null;
    if (_manufacturerData is EqualUnmodifiableListView)
      return _manufacturerData;
    // ignore: implicit_dynamic_type
    return EqualUnmodifiableListView(value);
  }

  /// [serviceData] is the service data of the BLE device.
  /// Can be null if the device does not have service data or is not broadcasted.
  /// Also, this list will be ordered by the service UUID.
  final List<BleServiceData>? _serviceData;

  /// [serviceData] is the service data of the BLE device.
  /// Can be null if the device does not have service data or is not broadcasted.
  /// Also, this list will be ordered by the service UUID.
  @override
  List<BleServiceData>? get serviceData {
    final value = _serviceData;
    if (value == null) return null;
    if (_serviceData is EqualUnmodifiableListView) return _serviceData;
    // ignore: implicit_dynamic_type
    return EqualUnmodifiableListView(value);
  }

  @override
  String toString() {
    return 'BleDevice(macAddress: $macAddress, name: $name, rssi: $rssi, manufacturerData: $manufacturerData, serviceData: $serviceData)';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$BleDeviceImpl &&
            (identical(other.macAddress, macAddress) ||
                other.macAddress == macAddress) &&
            (identical(other.name, name) || other.name == name) &&
            (identical(other.rssi, rssi) || other.rssi == rssi) &&
            const DeepCollectionEquality()
                .equals(other._manufacturerData, _manufacturerData) &&
            const DeepCollectionEquality()
                .equals(other._serviceData, _serviceData));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(
      runtimeType,
      macAddress,
      name,
      rssi,
      const DeepCollectionEquality().hash(_manufacturerData),
      const DeepCollectionEquality().hash(_serviceData));

  /// Create a copy of BleDevice
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$BleDeviceImplCopyWith<_$BleDeviceImpl> get copyWith =>
      __$$BleDeviceImplCopyWithImpl<_$BleDeviceImpl>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$$BleDeviceImplToJson(
      this,
    );
  }
}

abstract class _BleDevice extends BleDevice {
  const factory _BleDevice(
      {required final String macAddress,
      final String? name,
      final int? rssi,
      final List<int>? manufacturerData,
      final List<BleServiceData>? serviceData}) = _$BleDeviceImpl;
  const _BleDevice._() : super._();

  factory _BleDevice.fromJson(Map<String, dynamic> json) =
      _$BleDeviceImpl.fromJson;

  /// [macAddress] is the MAC address of the BLE device.
  /// Be careful, on Apple ecosystem, the MAC address is not the real identifier, is a generated by the platform
  /// and is hidden from the developer.
  @override
  String get macAddress;

  /// [name] is the name of the BLE device.
  /// Can be null if the device does not have a name or is not broadcasted.
  @override
  String? get name;

  /// [rssi] is the signal strength of the BLE device.
  /// Can be null if the device does not have a signal strength due to a platform limitation.
  @override
  int? get rssi;

  /// [manufacturerData] is the manufacturer data of the BLE device.
  /// Can be null if the device does not have manufacturer data or is not broadcasted.
  @override
  List<int>? get manufacturerData;

  /// [serviceData] is the service data of the BLE device.
  /// Can be null if the device does not have service data or is not broadcasted.
  /// Also, this list will be ordered by the service UUID.
  @override
  List<BleServiceData>? get serviceData;

  /// Create a copy of BleDevice
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$BleDeviceImplCopyWith<_$BleDeviceImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

BleService _$BleServiceFromJson(Map<String, dynamic> json) {
  return _BleService.fromJson(json);
}

/// @nodoc
mixin _$BleService {
  /// [uuid] is the UUID of the BLE service.
  String get uuid => throw _privateConstructorUsedError;

  /// [characteristics] is the list of characteristics of the BLE service.
  List<BleCharacteristic>? get characteristics =>
      throw _privateConstructorUsedError;

  /// Serializes this BleService to a JSON map.
  Map<String, dynamic> toJson() => throw _privateConstructorUsedError;

  /// Create a copy of BleService
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  $BleServiceCopyWith<BleService> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $BleServiceCopyWith<$Res> {
  factory $BleServiceCopyWith(
          BleService value, $Res Function(BleService) then) =
      _$BleServiceCopyWithImpl<$Res, BleService>;
  @useResult
  $Res call({String uuid, List<BleCharacteristic>? characteristics});
}

/// @nodoc
class _$BleServiceCopyWithImpl<$Res, $Val extends BleService>
    implements $BleServiceCopyWith<$Res> {
  _$BleServiceCopyWithImpl(this._value, this._then);

  // ignore: unused_field
  final $Val _value;
  // ignore: unused_field
  final $Res Function($Val) _then;

  /// Create a copy of BleService
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? uuid = null,
    Object? characteristics = freezed,
  }) {
    return _then(_value.copyWith(
      uuid: null == uuid
          ? _value.uuid
          : uuid // ignore: cast_nullable_to_non_nullable
              as String,
      characteristics: freezed == characteristics
          ? _value.characteristics
          : characteristics // ignore: cast_nullable_to_non_nullable
              as List<BleCharacteristic>?,
    ) as $Val);
  }
}

/// @nodoc
abstract class _$$BleServiceImplCopyWith<$Res>
    implements $BleServiceCopyWith<$Res> {
  factory _$$BleServiceImplCopyWith(
          _$BleServiceImpl value, $Res Function(_$BleServiceImpl) then) =
      __$$BleServiceImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String uuid, List<BleCharacteristic>? characteristics});
}

/// @nodoc
class __$$BleServiceImplCopyWithImpl<$Res>
    extends _$BleServiceCopyWithImpl<$Res, _$BleServiceImpl>
    implements _$$BleServiceImplCopyWith<$Res> {
  __$$BleServiceImplCopyWithImpl(
      _$BleServiceImpl _value, $Res Function(_$BleServiceImpl) _then)
      : super(_value, _then);

  /// Create a copy of BleService
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? uuid = null,
    Object? characteristics = freezed,
  }) {
    return _then(_$BleServiceImpl(
      uuid: null == uuid
          ? _value.uuid
          : uuid // ignore: cast_nullable_to_non_nullable
              as String,
      characteristics: freezed == characteristics
          ? _value._characteristics
          : characteristics // ignore: cast_nullable_to_non_nullable
              as List<BleCharacteristic>?,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$BleServiceImpl extends _BleService {
  const _$BleServiceImpl(
      {required this.uuid, final List<BleCharacteristic>? characteristics})
      : _characteristics = characteristics,
        super._();

  factory _$BleServiceImpl.fromJson(Map<String, dynamic> json) =>
      _$$BleServiceImplFromJson(json);

  /// [uuid] is the UUID of the BLE service.
  @override
  final String uuid;

  /// [characteristics] is the list of characteristics of the BLE service.
  final List<BleCharacteristic>? _characteristics;

  /// [characteristics] is the list of characteristics of the BLE service.
  @override
  List<BleCharacteristic>? get characteristics {
    final value = _characteristics;
    if (value == null) return null;
    if (_characteristics is EqualUnmodifiableListView) return _characteristics;
    // ignore: implicit_dynamic_type
    return EqualUnmodifiableListView(value);
  }

  @override
  String toString() {
    return 'BleService(uuid: $uuid, characteristics: $characteristics)';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$BleServiceImpl &&
            (identical(other.uuid, uuid) || other.uuid == uuid) &&
            const DeepCollectionEquality()
                .equals(other._characteristics, _characteristics));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(
      runtimeType, uuid, const DeepCollectionEquality().hash(_characteristics));

  /// Create a copy of BleService
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$BleServiceImplCopyWith<_$BleServiceImpl> get copyWith =>
      __$$BleServiceImplCopyWithImpl<_$BleServiceImpl>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$$BleServiceImplToJson(
      this,
    );
  }
}

abstract class _BleService extends BleService {
  const factory _BleService(
      {required final String uuid,
      final List<BleCharacteristic>? characteristics}) = _$BleServiceImpl;
  const _BleService._() : super._();

  factory _BleService.fromJson(Map<String, dynamic> json) =
      _$BleServiceImpl.fromJson;

  /// [uuid] is the UUID of the BLE service.
  @override
  String get uuid;

  /// [characteristics] is the list of characteristics of the BLE service.
  @override
  List<BleCharacteristic>? get characteristics;

  /// Create a copy of BleService
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$BleServiceImplCopyWith<_$BleServiceImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

BleServiceData _$BleServiceDataFromJson(Map<String, dynamic> json) {
  return _BleServiceData.fromJson(json);
}

/// @nodoc
mixin _$BleServiceData {
  /// [uuid] is the UUID of the BLE service.
  String get uuid => throw _privateConstructorUsedError;

  /// [characteristics] is the list of characteristics of the BLE service.
  List<int>? get data => throw _privateConstructorUsedError;

  /// Serializes this BleServiceData to a JSON map.
  Map<String, dynamic> toJson() => throw _privateConstructorUsedError;

  /// Create a copy of BleServiceData
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  $BleServiceDataCopyWith<BleServiceData> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $BleServiceDataCopyWith<$Res> {
  factory $BleServiceDataCopyWith(
          BleServiceData value, $Res Function(BleServiceData) then) =
      _$BleServiceDataCopyWithImpl<$Res, BleServiceData>;
  @useResult
  $Res call({String uuid, List<int>? data});
}

/// @nodoc
class _$BleServiceDataCopyWithImpl<$Res, $Val extends BleServiceData>
    implements $BleServiceDataCopyWith<$Res> {
  _$BleServiceDataCopyWithImpl(this._value, this._then);

  // ignore: unused_field
  final $Val _value;
  // ignore: unused_field
  final $Res Function($Val) _then;

  /// Create a copy of BleServiceData
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? uuid = null,
    Object? data = freezed,
  }) {
    return _then(_value.copyWith(
      uuid: null == uuid
          ? _value.uuid
          : uuid // ignore: cast_nullable_to_non_nullable
              as String,
      data: freezed == data
          ? _value.data
          : data // ignore: cast_nullable_to_non_nullable
              as List<int>?,
    ) as $Val);
  }
}

/// @nodoc
abstract class _$$BleServiceDataImplCopyWith<$Res>
    implements $BleServiceDataCopyWith<$Res> {
  factory _$$BleServiceDataImplCopyWith(_$BleServiceDataImpl value,
          $Res Function(_$BleServiceDataImpl) then) =
      __$$BleServiceDataImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String uuid, List<int>? data});
}

/// @nodoc
class __$$BleServiceDataImplCopyWithImpl<$Res>
    extends _$BleServiceDataCopyWithImpl<$Res, _$BleServiceDataImpl>
    implements _$$BleServiceDataImplCopyWith<$Res> {
  __$$BleServiceDataImplCopyWithImpl(
      _$BleServiceDataImpl _value, $Res Function(_$BleServiceDataImpl) _then)
      : super(_value, _then);

  /// Create a copy of BleServiceData
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? uuid = null,
    Object? data = freezed,
  }) {
    return _then(_$BleServiceDataImpl(
      uuid: null == uuid
          ? _value.uuid
          : uuid // ignore: cast_nullable_to_non_nullable
              as String,
      data: freezed == data
          ? _value._data
          : data // ignore: cast_nullable_to_non_nullable
              as List<int>?,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$BleServiceDataImpl extends _BleServiceData {
  const _$BleServiceDataImpl({required this.uuid, final List<int>? data})
      : _data = data,
        super._();

  factory _$BleServiceDataImpl.fromJson(Map<String, dynamic> json) =>
      _$$BleServiceDataImplFromJson(json);

  /// [uuid] is the UUID of the BLE service.
  @override
  final String uuid;

  /// [characteristics] is the list of characteristics of the BLE service.
  final List<int>? _data;

  /// [characteristics] is the list of characteristics of the BLE service.
  @override
  List<int>? get data {
    final value = _data;
    if (value == null) return null;
    if (_data is EqualUnmodifiableListView) return _data;
    // ignore: implicit_dynamic_type
    return EqualUnmodifiableListView(value);
  }

  @override
  String toString() {
    return 'BleServiceData(uuid: $uuid, data: $data)';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$BleServiceDataImpl &&
            (identical(other.uuid, uuid) || other.uuid == uuid) &&
            const DeepCollectionEquality().equals(other._data, _data));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(
      runtimeType, uuid, const DeepCollectionEquality().hash(_data));

  /// Create a copy of BleServiceData
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$BleServiceDataImplCopyWith<_$BleServiceDataImpl> get copyWith =>
      __$$BleServiceDataImplCopyWithImpl<_$BleServiceDataImpl>(
          this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$$BleServiceDataImplToJson(
      this,
    );
  }
}

abstract class _BleServiceData extends BleServiceData {
  const factory _BleServiceData(
      {required final String uuid,
      final List<int>? data}) = _$BleServiceDataImpl;
  const _BleServiceData._() : super._();

  factory _BleServiceData.fromJson(Map<String, dynamic> json) =
      _$BleServiceDataImpl.fromJson;

  /// [uuid] is the UUID of the BLE service.
  @override
  String get uuid;

  /// [characteristics] is the list of characteristics of the BLE service.
  @override
  List<int>? get data;

  /// Create a copy of BleServiceData
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$BleServiceDataImplCopyWith<_$BleServiceDataImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

BleCharacteristic _$BleCharacteristicFromJson(Map<String, dynamic> json) {
  return _BleCharacteristic.fromJson(json);
}

/// @nodoc
mixin _$BleCharacteristic {
  /// [uuid] is the UUID of the BLE characteristic.
  String get uuid => throw _privateConstructorUsedError;

  /// [properties] is the list of properties of the BLE characteristic.
  @JsonKey(unknownEnumValue: BleProperty.unknown)
  List<BleProperty> get properties => throw _privateConstructorUsedError;

  /// Serializes this BleCharacteristic to a JSON map.
  Map<String, dynamic> toJson() => throw _privateConstructorUsedError;

  /// Create a copy of BleCharacteristic
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  $BleCharacteristicCopyWith<BleCharacteristic> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $BleCharacteristicCopyWith<$Res> {
  factory $BleCharacteristicCopyWith(
          BleCharacteristic value, $Res Function(BleCharacteristic) then) =
      _$BleCharacteristicCopyWithImpl<$Res, BleCharacteristic>;
  @useResult
  $Res call(
      {String uuid,
      @JsonKey(unknownEnumValue: BleProperty.unknown)
      List<BleProperty> properties});
}

/// @nodoc
class _$BleCharacteristicCopyWithImpl<$Res, $Val extends BleCharacteristic>
    implements $BleCharacteristicCopyWith<$Res> {
  _$BleCharacteristicCopyWithImpl(this._value, this._then);

  // ignore: unused_field
  final $Val _value;
  // ignore: unused_field
  final $Res Function($Val) _then;

  /// Create a copy of BleCharacteristic
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? uuid = null,
    Object? properties = null,
  }) {
    return _then(_value.copyWith(
      uuid: null == uuid
          ? _value.uuid
          : uuid // ignore: cast_nullable_to_non_nullable
              as String,
      properties: null == properties
          ? _value.properties
          : properties // ignore: cast_nullable_to_non_nullable
              as List<BleProperty>,
    ) as $Val);
  }
}

/// @nodoc
abstract class _$$BleCharacteristicImplCopyWith<$Res>
    implements $BleCharacteristicCopyWith<$Res> {
  factory _$$BleCharacteristicImplCopyWith(_$BleCharacteristicImpl value,
          $Res Function(_$BleCharacteristicImpl) then) =
      __$$BleCharacteristicImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {String uuid,
      @JsonKey(unknownEnumValue: BleProperty.unknown)
      List<BleProperty> properties});
}

/// @nodoc
class __$$BleCharacteristicImplCopyWithImpl<$Res>
    extends _$BleCharacteristicCopyWithImpl<$Res, _$BleCharacteristicImpl>
    implements _$$BleCharacteristicImplCopyWith<$Res> {
  __$$BleCharacteristicImplCopyWithImpl(_$BleCharacteristicImpl _value,
      $Res Function(_$BleCharacteristicImpl) _then)
      : super(_value, _then);

  /// Create a copy of BleCharacteristic
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? uuid = null,
    Object? properties = null,
  }) {
    return _then(_$BleCharacteristicImpl(
      uuid: null == uuid
          ? _value.uuid
          : uuid // ignore: cast_nullable_to_non_nullable
              as String,
      properties: null == properties
          ? _value._properties
          : properties // ignore: cast_nullable_to_non_nullable
              as List<BleProperty>,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$BleCharacteristicImpl extends _BleCharacteristic {
  const _$BleCharacteristicImpl(
      {required this.uuid,
      @JsonKey(unknownEnumValue: BleProperty.unknown)
      final List<BleProperty> properties = const []})
      : _properties = properties,
        super._();

  factory _$BleCharacteristicImpl.fromJson(Map<String, dynamic> json) =>
      _$$BleCharacteristicImplFromJson(json);

  /// [uuid] is the UUID of the BLE characteristic.
  @override
  final String uuid;

  /// [properties] is the list of properties of the BLE characteristic.
  final List<BleProperty> _properties;

  /// [properties] is the list of properties of the BLE characteristic.
  @override
  @JsonKey(unknownEnumValue: BleProperty.unknown)
  List<BleProperty> get properties {
    if (_properties is EqualUnmodifiableListView) return _properties;
    // ignore: implicit_dynamic_type
    return EqualUnmodifiableListView(_properties);
  }

  @override
  String toString() {
    return 'BleCharacteristic(uuid: $uuid, properties: $properties)';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$BleCharacteristicImpl &&
            (identical(other.uuid, uuid) || other.uuid == uuid) &&
            const DeepCollectionEquality()
                .equals(other._properties, _properties));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(
      runtimeType, uuid, const DeepCollectionEquality().hash(_properties));

  /// Create a copy of BleCharacteristic
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$BleCharacteristicImplCopyWith<_$BleCharacteristicImpl> get copyWith =>
      __$$BleCharacteristicImplCopyWithImpl<_$BleCharacteristicImpl>(
          this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$$BleCharacteristicImplToJson(
      this,
    );
  }
}

abstract class _BleCharacteristic extends BleCharacteristic {
  const factory _BleCharacteristic(
      {required final String uuid,
      @JsonKey(unknownEnumValue: BleProperty.unknown)
      final List<BleProperty> properties}) = _$BleCharacteristicImpl;
  const _BleCharacteristic._() : super._();

  factory _BleCharacteristic.fromJson(Map<String, dynamic> json) =
      _$BleCharacteristicImpl.fromJson;

  /// [uuid] is the UUID of the BLE characteristic.
  @override
  String get uuid;

  /// [properties] is the list of properties of the BLE characteristic.
  @override
  @JsonKey(unknownEnumValue: BleProperty.unknown)
  List<BleProperty> get properties;

  /// Create a copy of BleCharacteristic
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$BleCharacteristicImplCopyWith<_$BleCharacteristicImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

BleParser _$BleParserFromJson(Map<String, dynamic> json) {
  return _BleParser.fromJson(json);
}

/// @nodoc
mixin _$BleParser {
  /// [identifier] is the unique identifier of the parser.
  String get identifier => throw _privateConstructorUsedError;

  /// [config] is the configuration structure of the parser
  BleParserConfig get config => throw _privateConstructorUsedError;

  /// Serializes this BleParser to a JSON map.
  Map<String, dynamic> toJson() => throw _privateConstructorUsedError;

  /// Create a copy of BleParser
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  $BleParserCopyWith<BleParser> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $BleParserCopyWith<$Res> {
  factory $BleParserCopyWith(BleParser value, $Res Function(BleParser) then) =
      _$BleParserCopyWithImpl<$Res, BleParser>;
  @useResult
  $Res call({String identifier, BleParserConfig config});

  $BleParserConfigCopyWith<$Res> get config;
}

/// @nodoc
class _$BleParserCopyWithImpl<$Res, $Val extends BleParser>
    implements $BleParserCopyWith<$Res> {
  _$BleParserCopyWithImpl(this._value, this._then);

  // ignore: unused_field
  final $Val _value;
  // ignore: unused_field
  final $Res Function($Val) _then;

  /// Create a copy of BleParser
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? identifier = null,
    Object? config = null,
  }) {
    return _then(_value.copyWith(
      identifier: null == identifier
          ? _value.identifier
          : identifier // ignore: cast_nullable_to_non_nullable
              as String,
      config: null == config
          ? _value.config
          : config // ignore: cast_nullable_to_non_nullable
              as BleParserConfig,
    ) as $Val);
  }

  /// Create a copy of BleParser
  /// with the given fields replaced by the non-null parameter values.
  @override
  @pragma('vm:prefer-inline')
  $BleParserConfigCopyWith<$Res> get config {
    return $BleParserConfigCopyWith<$Res>(_value.config, (value) {
      return _then(_value.copyWith(config: value) as $Val);
    });
  }
}

/// @nodoc
abstract class _$$BleParserImplCopyWith<$Res>
    implements $BleParserCopyWith<$Res> {
  factory _$$BleParserImplCopyWith(
          _$BleParserImpl value, $Res Function(_$BleParserImpl) then) =
      __$$BleParserImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String identifier, BleParserConfig config});

  @override
  $BleParserConfigCopyWith<$Res> get config;
}

/// @nodoc
class __$$BleParserImplCopyWithImpl<$Res>
    extends _$BleParserCopyWithImpl<$Res, _$BleParserImpl>
    implements _$$BleParserImplCopyWith<$Res> {
  __$$BleParserImplCopyWithImpl(
      _$BleParserImpl _value, $Res Function(_$BleParserImpl) _then)
      : super(_value, _then);

  /// Create a copy of BleParser
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? identifier = null,
    Object? config = null,
  }) {
    return _then(_$BleParserImpl(
      identifier: null == identifier
          ? _value.identifier
          : identifier // ignore: cast_nullable_to_non_nullable
              as String,
      config: null == config
          ? _value.config
          : config // ignore: cast_nullable_to_non_nullable
              as BleParserConfig,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$BleParserImpl extends _BleParser {
  const _$BleParserImpl({required this.identifier, required this.config})
      : super._();

  factory _$BleParserImpl.fromJson(Map<String, dynamic> json) =>
      _$$BleParserImplFromJson(json);

  /// [identifier] is the unique identifier of the parser.
  @override
  final String identifier;

  /// [config] is the configuration structure of the parser
  @override
  final BleParserConfig config;

  @override
  String toString() {
    return 'BleParser(identifier: $identifier, config: $config)';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$BleParserImpl &&
            (identical(other.identifier, identifier) ||
                other.identifier == identifier) &&
            (identical(other.config, config) || other.config == config));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(runtimeType, identifier, config);

  /// Create a copy of BleParser
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$BleParserImplCopyWith<_$BleParserImpl> get copyWith =>
      __$$BleParserImplCopyWithImpl<_$BleParserImpl>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$$BleParserImplToJson(
      this,
    );
  }
}

abstract class _BleParser extends BleParser {
  const factory _BleParser(
      {required final String identifier,
      required final BleParserConfig config}) = _$BleParserImpl;
  const _BleParser._() : super._();

  factory _BleParser.fromJson(Map<String, dynamic> json) =
      _$BleParserImpl.fromJson;

  /// [identifier] is the unique identifier of the parser.
  @override
  String get identifier;

  /// [config] is the configuration structure of the parser
  @override
  BleParserConfig get config;

  /// Create a copy of BleParser
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$BleParserImplCopyWith<_$BleParserImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

BleParserConfig _$BleParserConfigFromJson(Map<String, dynamic> json) {
  return _BleParserConfig.fromJson(json);
}

/// @nodoc
mixin _$BleParserConfig {
  /// [conditions] is the condition that the device must meet to be parsed by this parser.
  /// If the condition is null, the parser will always parse the device.
  List<BleCondition> get conditions => throw _privateConstructorUsedError;

  /// [properties] is the map of properties that the parser will extract from the advertisement data.
  /// The key is the name of the property and the value is the configuration of the property.
  List<BleParserProperty> get properties => throw _privateConstructorUsedError;

  /// Serializes this BleParserConfig to a JSON map.
  Map<String, dynamic> toJson() => throw _privateConstructorUsedError;

  /// Create a copy of BleParserConfig
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  $BleParserConfigCopyWith<BleParserConfig> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $BleParserConfigCopyWith<$Res> {
  factory $BleParserConfigCopyWith(
          BleParserConfig value, $Res Function(BleParserConfig) then) =
      _$BleParserConfigCopyWithImpl<$Res, BleParserConfig>;
  @useResult
  $Res call(
      {List<BleCondition> conditions, List<BleParserProperty> properties});
}

/// @nodoc
class _$BleParserConfigCopyWithImpl<$Res, $Val extends BleParserConfig>
    implements $BleParserConfigCopyWith<$Res> {
  _$BleParserConfigCopyWithImpl(this._value, this._then);

  // ignore: unused_field
  final $Val _value;
  // ignore: unused_field
  final $Res Function($Val) _then;

  /// Create a copy of BleParserConfig
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? conditions = null,
    Object? properties = null,
  }) {
    return _then(_value.copyWith(
      conditions: null == conditions
          ? _value.conditions
          : conditions // ignore: cast_nullable_to_non_nullable
              as List<BleCondition>,
      properties: null == properties
          ? _value.properties
          : properties // ignore: cast_nullable_to_non_nullable
              as List<BleParserProperty>,
    ) as $Val);
  }
}

/// @nodoc
abstract class _$$BleParserConfigImplCopyWith<$Res>
    implements $BleParserConfigCopyWith<$Res> {
  factory _$$BleParserConfigImplCopyWith(_$BleParserConfigImpl value,
          $Res Function(_$BleParserConfigImpl) then) =
      __$$BleParserConfigImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {List<BleCondition> conditions, List<BleParserProperty> properties});
}

/// @nodoc
class __$$BleParserConfigImplCopyWithImpl<$Res>
    extends _$BleParserConfigCopyWithImpl<$Res, _$BleParserConfigImpl>
    implements _$$BleParserConfigImplCopyWith<$Res> {
  __$$BleParserConfigImplCopyWithImpl(
      _$BleParserConfigImpl _value, $Res Function(_$BleParserConfigImpl) _then)
      : super(_value, _then);

  /// Create a copy of BleParserConfig
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? conditions = null,
    Object? properties = null,
  }) {
    return _then(_$BleParserConfigImpl(
      conditions: null == conditions
          ? _value._conditions
          : conditions // ignore: cast_nullable_to_non_nullable
              as List<BleCondition>,
      properties: null == properties
          ? _value._properties
          : properties // ignore: cast_nullable_to_non_nullable
              as List<BleParserProperty>,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$BleParserConfigImpl extends _BleParserConfig {
  const _$BleParserConfigImpl(
      {final List<BleCondition> conditions = const [],
      final List<BleParserProperty> properties = const []})
      : _conditions = conditions,
        _properties = properties,
        super._();

  factory _$BleParserConfigImpl.fromJson(Map<String, dynamic> json) =>
      _$$BleParserConfigImplFromJson(json);

  /// [conditions] is the condition that the device must meet to be parsed by this parser.
  /// If the condition is null, the parser will always parse the device.
  final List<BleCondition> _conditions;

  /// [conditions] is the condition that the device must meet to be parsed by this parser.
  /// If the condition is null, the parser will always parse the device.
  @override
  @JsonKey()
  List<BleCondition> get conditions {
    if (_conditions is EqualUnmodifiableListView) return _conditions;
    // ignore: implicit_dynamic_type
    return EqualUnmodifiableListView(_conditions);
  }

  /// [properties] is the map of properties that the parser will extract from the advertisement data.
  /// The key is the name of the property and the value is the configuration of the property.
  final List<BleParserProperty> _properties;

  /// [properties] is the map of properties that the parser will extract from the advertisement data.
  /// The key is the name of the property and the value is the configuration of the property.
  @override
  @JsonKey()
  List<BleParserProperty> get properties {
    if (_properties is EqualUnmodifiableListView) return _properties;
    // ignore: implicit_dynamic_type
    return EqualUnmodifiableListView(_properties);
  }

  @override
  String toString() {
    return 'BleParserConfig(conditions: $conditions, properties: $properties)';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$BleParserConfigImpl &&
            const DeepCollectionEquality()
                .equals(other._conditions, _conditions) &&
            const DeepCollectionEquality()
                .equals(other._properties, _properties));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(
      runtimeType,
      const DeepCollectionEquality().hash(_conditions),
      const DeepCollectionEquality().hash(_properties));

  /// Create a copy of BleParserConfig
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$BleParserConfigImplCopyWith<_$BleParserConfigImpl> get copyWith =>
      __$$BleParserConfigImplCopyWithImpl<_$BleParserConfigImpl>(
          this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$$BleParserConfigImplToJson(
      this,
    );
  }
}

abstract class _BleParserConfig extends BleParserConfig {
  const factory _BleParserConfig(
      {final List<BleCondition> conditions,
      final List<BleParserProperty> properties}) = _$BleParserConfigImpl;
  const _BleParserConfig._() : super._();

  factory _BleParserConfig.fromJson(Map<String, dynamic> json) =
      _$BleParserConfigImpl.fromJson;

  /// [conditions] is the condition that the device must meet to be parsed by this parser.
  /// If the condition is null, the parser will always parse the device.
  @override
  List<BleCondition> get conditions;

  /// [properties] is the map of properties that the parser will extract from the advertisement data.
  /// The key is the name of the property and the value is the configuration of the property.
  @override
  List<BleParserProperty> get properties;

  /// Create a copy of BleParserConfig
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$BleParserConfigImplCopyWith<_$BleParserConfigImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

BleParserProperty _$BleParserPropertyFromJson(Map<String, dynamic> json) {
  return _BleParserProperty.fromJson(json);
}

/// @nodoc
mixin _$BleParserProperty {
  /// [parameter] is the parameter that the parser will extract.
  String get parameter => throw _privateConstructorUsedError;

  /// [source] is the source of the data that the parser will extract.
  @JsonKey(unknownEnumValue: BleParserSource.unknown)
  BleParserSource get source => throw _privateConstructorUsedError;

  /// [service] is the service UUID that the parser will extract.
  int? get service => throw _privateConstructorUsedError;

  /// [conditions] is the condition that the device must meet to be parsed by this parser.
  List<BleCondition> get conditions => throw _privateConstructorUsedError;

  /// [run] is the list of operations to extract the data from the advertisement data.
  List<BleConversion> get run => throw _privateConstructorUsedError;

  /// Serializes this BleParserProperty to a JSON map.
  Map<String, dynamic> toJson() => throw _privateConstructorUsedError;

  /// Create a copy of BleParserProperty
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  $BleParserPropertyCopyWith<BleParserProperty> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $BleParserPropertyCopyWith<$Res> {
  factory $BleParserPropertyCopyWith(
          BleParserProperty value, $Res Function(BleParserProperty) then) =
      _$BleParserPropertyCopyWithImpl<$Res, BleParserProperty>;
  @useResult
  $Res call(
      {String parameter,
      @JsonKey(unknownEnumValue: BleParserSource.unknown)
      BleParserSource source,
      int? service,
      List<BleCondition> conditions,
      List<BleConversion> run});
}

/// @nodoc
class _$BleParserPropertyCopyWithImpl<$Res, $Val extends BleParserProperty>
    implements $BleParserPropertyCopyWith<$Res> {
  _$BleParserPropertyCopyWithImpl(this._value, this._then);

  // ignore: unused_field
  final $Val _value;
  // ignore: unused_field
  final $Res Function($Val) _then;

  /// Create a copy of BleParserProperty
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? parameter = null,
    Object? source = null,
    Object? service = freezed,
    Object? conditions = null,
    Object? run = null,
  }) {
    return _then(_value.copyWith(
      parameter: null == parameter
          ? _value.parameter
          : parameter // ignore: cast_nullable_to_non_nullable
              as String,
      source: null == source
          ? _value.source
          : source // ignore: cast_nullable_to_non_nullable
              as BleParserSource,
      service: freezed == service
          ? _value.service
          : service // ignore: cast_nullable_to_non_nullable
              as int?,
      conditions: null == conditions
          ? _value.conditions
          : conditions // ignore: cast_nullable_to_non_nullable
              as List<BleCondition>,
      run: null == run
          ? _value.run
          : run // ignore: cast_nullable_to_non_nullable
              as List<BleConversion>,
    ) as $Val);
  }
}

/// @nodoc
abstract class _$$BleParserPropertyImplCopyWith<$Res>
    implements $BleParserPropertyCopyWith<$Res> {
  factory _$$BleParserPropertyImplCopyWith(_$BleParserPropertyImpl value,
          $Res Function(_$BleParserPropertyImpl) then) =
      __$$BleParserPropertyImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {String parameter,
      @JsonKey(unknownEnumValue: BleParserSource.unknown)
      BleParserSource source,
      int? service,
      List<BleCondition> conditions,
      List<BleConversion> run});
}

/// @nodoc
class __$$BleParserPropertyImplCopyWithImpl<$Res>
    extends _$BleParserPropertyCopyWithImpl<$Res, _$BleParserPropertyImpl>
    implements _$$BleParserPropertyImplCopyWith<$Res> {
  __$$BleParserPropertyImplCopyWithImpl(_$BleParserPropertyImpl _value,
      $Res Function(_$BleParserPropertyImpl) _then)
      : super(_value, _then);

  /// Create a copy of BleParserProperty
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? parameter = null,
    Object? source = null,
    Object? service = freezed,
    Object? conditions = null,
    Object? run = null,
  }) {
    return _then(_$BleParserPropertyImpl(
      parameter: null == parameter
          ? _value.parameter
          : parameter // ignore: cast_nullable_to_non_nullable
              as String,
      source: null == source
          ? _value.source
          : source // ignore: cast_nullable_to_non_nullable
              as BleParserSource,
      service: freezed == service
          ? _value.service
          : service // ignore: cast_nullable_to_non_nullable
              as int?,
      conditions: null == conditions
          ? _value._conditions
          : conditions // ignore: cast_nullable_to_non_nullable
              as List<BleCondition>,
      run: null == run
          ? _value._run
          : run // ignore: cast_nullable_to_non_nullable
              as List<BleConversion>,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$BleParserPropertyImpl extends _BleParserProperty {
  const _$BleParserPropertyImpl(
      {required this.parameter,
      @JsonKey(unknownEnumValue: BleParserSource.unknown) required this.source,
      this.service,
      final List<BleCondition> conditions = const [],
      final List<BleConversion> run = const []})
      : _conditions = conditions,
        _run = run,
        super._();

  factory _$BleParserPropertyImpl.fromJson(Map<String, dynamic> json) =>
      _$$BleParserPropertyImplFromJson(json);

  /// [parameter] is the parameter that the parser will extract.
  @override
  final String parameter;

  /// [source] is the source of the data that the parser will extract.
  @override
  @JsonKey(unknownEnumValue: BleParserSource.unknown)
  final BleParserSource source;

  /// [service] is the service UUID that the parser will extract.
  @override
  final int? service;

  /// [conditions] is the condition that the device must meet to be parsed by this parser.
  final List<BleCondition> _conditions;

  /// [conditions] is the condition that the device must meet to be parsed by this parser.
  @override
  @JsonKey()
  List<BleCondition> get conditions {
    if (_conditions is EqualUnmodifiableListView) return _conditions;
    // ignore: implicit_dynamic_type
    return EqualUnmodifiableListView(_conditions);
  }

  /// [run] is the list of operations to extract the data from the advertisement data.
  final List<BleConversion> _run;

  /// [run] is the list of operations to extract the data from the advertisement data.
  @override
  @JsonKey()
  List<BleConversion> get run {
    if (_run is EqualUnmodifiableListView) return _run;
    // ignore: implicit_dynamic_type
    return EqualUnmodifiableListView(_run);
  }

  @override
  String toString() {
    return 'BleParserProperty(parameter: $parameter, source: $source, service: $service, conditions: $conditions, run: $run)';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$BleParserPropertyImpl &&
            (identical(other.parameter, parameter) ||
                other.parameter == parameter) &&
            (identical(other.source, source) || other.source == source) &&
            (identical(other.service, service) || other.service == service) &&
            const DeepCollectionEquality()
                .equals(other._conditions, _conditions) &&
            const DeepCollectionEquality().equals(other._run, _run));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(
      runtimeType,
      parameter,
      source,
      service,
      const DeepCollectionEquality().hash(_conditions),
      const DeepCollectionEquality().hash(_run));

  /// Create a copy of BleParserProperty
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$BleParserPropertyImplCopyWith<_$BleParserPropertyImpl> get copyWith =>
      __$$BleParserPropertyImplCopyWithImpl<_$BleParserPropertyImpl>(
          this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$$BleParserPropertyImplToJson(
      this,
    );
  }
}

abstract class _BleParserProperty extends BleParserProperty {
  const factory _BleParserProperty(
      {required final String parameter,
      @JsonKey(unknownEnumValue: BleParserSource.unknown)
      required final BleParserSource source,
      final int? service,
      final List<BleCondition> conditions,
      final List<BleConversion> run}) = _$BleParserPropertyImpl;
  const _BleParserProperty._() : super._();

  factory _BleParserProperty.fromJson(Map<String, dynamic> json) =
      _$BleParserPropertyImpl.fromJson;

  /// [parameter] is the parameter that the parser will extract.
  @override
  String get parameter;

  /// [source] is the source of the data that the parser will extract.
  @override
  @JsonKey(unknownEnumValue: BleParserSource.unknown)
  BleParserSource get source;

  /// [service] is the service UUID that the parser will extract.
  @override
  int? get service;

  /// [conditions] is the condition that the device must meet to be parsed by this parser.
  @override
  List<BleCondition> get conditions;

  /// [run] is the list of operations to extract the data from the advertisement data.
  @override
  List<BleConversion> get run;

  /// Create a copy of BleParserProperty
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$BleParserPropertyImplCopyWith<_$BleParserPropertyImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

BleConversion _$BleConversionFromJson(Map<String, dynamic> json) {
  return _BleConversion.fromJson(json);
}

/// @nodoc
mixin _$BleConversion {
  /// [operation] is the operation that the parser will execute.
  @JsonKey(unknownEnumValue: BleOperation.unknown)
  BleOperation get operation => throw _privateConstructorUsedError;

  /// [zFill] is the number of 0 to be added to the left of the value.
  int get zFill => throw _privateConstructorUsedError;

  /// [operand] is the operand of the operation.
  dynamic get operand => throw _privateConstructorUsedError;

  /// Serializes this BleConversion to a JSON map.
  Map<String, dynamic> toJson() => throw _privateConstructorUsedError;

  /// Create a copy of BleConversion
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  $BleConversionCopyWith<BleConversion> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $BleConversionCopyWith<$Res> {
  factory $BleConversionCopyWith(
          BleConversion value, $Res Function(BleConversion) then) =
      _$BleConversionCopyWithImpl<$Res, BleConversion>;
  @useResult
  $Res call(
      {@JsonKey(unknownEnumValue: BleOperation.unknown) BleOperation operation,
      int zFill,
      dynamic operand});
}

/// @nodoc
class _$BleConversionCopyWithImpl<$Res, $Val extends BleConversion>
    implements $BleConversionCopyWith<$Res> {
  _$BleConversionCopyWithImpl(this._value, this._then);

  // ignore: unused_field
  final $Val _value;
  // ignore: unused_field
  final $Res Function($Val) _then;

  /// Create a copy of BleConversion
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? operation = null,
    Object? zFill = null,
    Object? operand = freezed,
  }) {
    return _then(_value.copyWith(
      operation: null == operation
          ? _value.operation
          : operation // ignore: cast_nullable_to_non_nullable
              as BleOperation,
      zFill: null == zFill
          ? _value.zFill
          : zFill // ignore: cast_nullable_to_non_nullable
              as int,
      operand: freezed == operand
          ? _value.operand
          : operand // ignore: cast_nullable_to_non_nullable
              as dynamic,
    ) as $Val);
  }
}

/// @nodoc
abstract class _$$BleConversionImplCopyWith<$Res>
    implements $BleConversionCopyWith<$Res> {
  factory _$$BleConversionImplCopyWith(
          _$BleConversionImpl value, $Res Function(_$BleConversionImpl) then) =
      __$$BleConversionImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {@JsonKey(unknownEnumValue: BleOperation.unknown) BleOperation operation,
      int zFill,
      dynamic operand});
}

/// @nodoc
class __$$BleConversionImplCopyWithImpl<$Res>
    extends _$BleConversionCopyWithImpl<$Res, _$BleConversionImpl>
    implements _$$BleConversionImplCopyWith<$Res> {
  __$$BleConversionImplCopyWithImpl(
      _$BleConversionImpl _value, $Res Function(_$BleConversionImpl) _then)
      : super(_value, _then);

  /// Create a copy of BleConversion
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? operation = null,
    Object? zFill = null,
    Object? operand = freezed,
  }) {
    return _then(_$BleConversionImpl(
      operation: null == operation
          ? _value.operation
          : operation // ignore: cast_nullable_to_non_nullable
              as BleOperation,
      zFill: null == zFill
          ? _value.zFill
          : zFill // ignore: cast_nullable_to_non_nullable
              as int,
      operand: freezed == operand
          ? _value.operand
          : operand // ignore: cast_nullable_to_non_nullable
              as dynamic,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$BleConversionImpl extends _BleConversion {
  const _$BleConversionImpl(
      {@JsonKey(unknownEnumValue: BleOperation.unknown) required this.operation,
      this.zFill = 0,
      this.operand})
      : super._();

  factory _$BleConversionImpl.fromJson(Map<String, dynamic> json) =>
      _$$BleConversionImplFromJson(json);

  /// [operation] is the operation that the parser will execute.
  @override
  @JsonKey(unknownEnumValue: BleOperation.unknown)
  final BleOperation operation;

  /// [zFill] is the number of 0 to be added to the left of the value.
  @override
  @JsonKey()
  final int zFill;

  /// [operand] is the operand of the operation.
  @override
  final dynamic operand;

  @override
  String toString() {
    return 'BleConversion(operation: $operation, zFill: $zFill, operand: $operand)';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$BleConversionImpl &&
            (identical(other.operation, operation) ||
                other.operation == operation) &&
            (identical(other.zFill, zFill) || other.zFill == zFill) &&
            const DeepCollectionEquality().equals(other.operand, operand));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(runtimeType, operation, zFill,
      const DeepCollectionEquality().hash(operand));

  /// Create a copy of BleConversion
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$BleConversionImplCopyWith<_$BleConversionImpl> get copyWith =>
      __$$BleConversionImplCopyWithImpl<_$BleConversionImpl>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$$BleConversionImplToJson(
      this,
    );
  }
}

abstract class _BleConversion extends BleConversion {
  const factory _BleConversion(
      {@JsonKey(unknownEnumValue: BleOperation.unknown)
      required final BleOperation operation,
      final int zFill,
      final dynamic operand}) = _$BleConversionImpl;
  const _BleConversion._() : super._();

  factory _BleConversion.fromJson(Map<String, dynamic> json) =
      _$BleConversionImpl.fromJson;

  /// [operation] is the operation that the parser will execute.
  @override
  @JsonKey(unknownEnumValue: BleOperation.unknown)
  BleOperation get operation;

  /// [zFill] is the number of 0 to be added to the left of the value.
  @override
  int get zFill;

  /// [operand] is the operand of the operation.
  @override
  dynamic get operand;

  /// Create a copy of BleConversion
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$BleConversionImplCopyWith<_$BleConversionImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

BleCondition _$BleConditionFromJson(Map<String, dynamic> json) {
  return _BleCondition.fromJson(json);
}

/// @nodoc
mixin _$BleCondition {
  /// [watch] is the property that the parser will watch.
  @JsonKey(unknownEnumValue: BleWatch.unknown)
  BleWatch get watch => throw _privateConstructorUsedError;

  /// [operation] is the operation that the parser will execute.
  @JsonKey(unknownEnumValue: BleOperation.unknown)
  BleOperation get operation => throw _privateConstructorUsedError;

  /// [expected] is the expected value of the operation.
  dynamic get expected => throw _privateConstructorUsedError;

  /// Serializes this BleCondition to a JSON map.
  Map<String, dynamic> toJson() => throw _privateConstructorUsedError;

  /// Create a copy of BleCondition
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  $BleConditionCopyWith<BleCondition> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $BleConditionCopyWith<$Res> {
  factory $BleConditionCopyWith(
          BleCondition value, $Res Function(BleCondition) then) =
      _$BleConditionCopyWithImpl<$Res, BleCondition>;
  @useResult
  $Res call(
      {@JsonKey(unknownEnumValue: BleWatch.unknown) BleWatch watch,
      @JsonKey(unknownEnumValue: BleOperation.unknown) BleOperation operation,
      dynamic expected});
}

/// @nodoc
class _$BleConditionCopyWithImpl<$Res, $Val extends BleCondition>
    implements $BleConditionCopyWith<$Res> {
  _$BleConditionCopyWithImpl(this._value, this._then);

  // ignore: unused_field
  final $Val _value;
  // ignore: unused_field
  final $Res Function($Val) _then;

  /// Create a copy of BleCondition
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? watch = null,
    Object? operation = null,
    Object? expected = freezed,
  }) {
    return _then(_value.copyWith(
      watch: null == watch
          ? _value.watch
          : watch // ignore: cast_nullable_to_non_nullable
              as BleWatch,
      operation: null == operation
          ? _value.operation
          : operation // ignore: cast_nullable_to_non_nullable
              as BleOperation,
      expected: freezed == expected
          ? _value.expected
          : expected // ignore: cast_nullable_to_non_nullable
              as dynamic,
    ) as $Val);
  }
}

/// @nodoc
abstract class _$$BleConditionImplCopyWith<$Res>
    implements $BleConditionCopyWith<$Res> {
  factory _$$BleConditionImplCopyWith(
          _$BleConditionImpl value, $Res Function(_$BleConditionImpl) then) =
      __$$BleConditionImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {@JsonKey(unknownEnumValue: BleWatch.unknown) BleWatch watch,
      @JsonKey(unknownEnumValue: BleOperation.unknown) BleOperation operation,
      dynamic expected});
}

/// @nodoc
class __$$BleConditionImplCopyWithImpl<$Res>
    extends _$BleConditionCopyWithImpl<$Res, _$BleConditionImpl>
    implements _$$BleConditionImplCopyWith<$Res> {
  __$$BleConditionImplCopyWithImpl(
      _$BleConditionImpl _value, $Res Function(_$BleConditionImpl) _then)
      : super(_value, _then);

  /// Create a copy of BleCondition
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? watch = null,
    Object? operation = null,
    Object? expected = freezed,
  }) {
    return _then(_$BleConditionImpl(
      watch: null == watch
          ? _value.watch
          : watch // ignore: cast_nullable_to_non_nullable
              as BleWatch,
      operation: null == operation
          ? _value.operation
          : operation // ignore: cast_nullable_to_non_nullable
              as BleOperation,
      expected: freezed == expected
          ? _value.expected
          : expected // ignore: cast_nullable_to_non_nullable
              as dynamic,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$BleConditionImpl extends _BleCondition {
  const _$BleConditionImpl(
      {@JsonKey(unknownEnumValue: BleWatch.unknown) required this.watch,
      @JsonKey(unknownEnumValue: BleOperation.unknown) required this.operation,
      required this.expected})
      : super._();

  factory _$BleConditionImpl.fromJson(Map<String, dynamic> json) =>
      _$$BleConditionImplFromJson(json);

  /// [watch] is the property that the parser will watch.
  @override
  @JsonKey(unknownEnumValue: BleWatch.unknown)
  final BleWatch watch;

  /// [operation] is the operation that the parser will execute.
  @override
  @JsonKey(unknownEnumValue: BleOperation.unknown)
  final BleOperation operation;

  /// [expected] is the expected value of the operation.
  @override
  final dynamic expected;

  @override
  String toString() {
    return 'BleCondition(watch: $watch, operation: $operation, expected: $expected)';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$BleConditionImpl &&
            (identical(other.watch, watch) || other.watch == watch) &&
            (identical(other.operation, operation) ||
                other.operation == operation) &&
            const DeepCollectionEquality().equals(other.expected, expected));
  }

  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  int get hashCode => Object.hash(runtimeType, watch, operation,
      const DeepCollectionEquality().hash(expected));

  /// Create a copy of BleCondition
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$BleConditionImplCopyWith<_$BleConditionImpl> get copyWith =>
      __$$BleConditionImplCopyWithImpl<_$BleConditionImpl>(this, _$identity);

  @override
  Map<String, dynamic> toJson() {
    return _$$BleConditionImplToJson(
      this,
    );
  }
}

abstract class _BleCondition extends BleCondition {
  const factory _BleCondition(
      {@JsonKey(unknownEnumValue: BleWatch.unknown)
      required final BleWatch watch,
      @JsonKey(unknownEnumValue: BleOperation.unknown)
      required final BleOperation operation,
      required final dynamic expected}) = _$BleConditionImpl;
  const _BleCondition._() : super._();

  factory _BleCondition.fromJson(Map<String, dynamic> json) =
      _$BleConditionImpl.fromJson;

  /// [watch] is the property that the parser will watch.
  @override
  @JsonKey(unknownEnumValue: BleWatch.unknown)
  BleWatch get watch;

  /// [operation] is the operation that the parser will execute.
  @override
  @JsonKey(unknownEnumValue: BleOperation.unknown)
  BleOperation get operation;

  /// [expected] is the expected value of the operation.
  @override
  dynamic get expected;

  /// Create a copy of BleCondition
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$BleConditionImplCopyWith<_$BleConditionImpl> get copyWith =>
      throw _privateConstructorUsedError;
}
